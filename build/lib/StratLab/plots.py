import matplotlib.pyplot as plt
import matplotlib.ticker as ticker
import pandas as pd
import numpy as np
import warnings

def running_total(
        df: pd.DataFrame = None,
        cols: list = None,
        show: bool = False,
        writer_path: str = None
):

    avg_drawdown = np.mean(df['Drawdown'])
    fig, ax = plt.subplots(3, 1, figsize= [15, 10])

    ax[0].plot(df['Date'], df['Running Total'])
    ax[1].plot(df['Date'], df['Running Total'])
    ax[2].plot(df['Date'], df['Drawdown'])

    def comma_formatter(x, pos):
        return '{:,}'.format(int(x))

    def pct_formatter(x, pos):
        return '{:,.2f}%'.format(int(x*100))
    
    # formatter = ticker.ScalarFormatter(useMathText=True)
    # formatter.set_scientific(False)
    ax[0].yaxis.set_major_formatter(ticker.FuncFormatter(comma_formatter))
    ax[1].set_yscale('log')
    ax[2].yaxis.set_major_formatter(ticker.FuncFormatter(pct_formatter))
    ax[2].axhline(y=avg_drawdown, color='r', linestyle='--', label='Avg')
    ax[2].annotate(
        '{:.2f}%'.format(avg_drawdown*100), xy=(df['Date'].iloc[-1], avg_drawdown),
        xytext=(5, 5), textcoords='offset points', ha='left', va='bottom',
        bbox=dict(boxstyle='round,pad=0.2', fc='blue', alpha=1.0),
        arrowprops=dict(arrowstyle='-', color='white'), color='white',
        weight='bold'
    )

    ax[0].set_title('Equity Curve')
    ax[1].set_title('Equity Curve (Log)')
    ax[2].set_title('Drawdown')
    fig.suptitle('Backtest Results')

    # Create footnotes
    fig.text(
        .05,
        .03,
        '1: Charts generated by StratLab',
        fontsize=8,
        color='blue'
    )

    # Ajust whitespace below charts
    fig.subplots_adjust(hspace=0.4)
    if writer_path is not None:
        plt.savefig(f'{writer_path.replace(".xlsx", ".png")}')

    if show == True:
        plt.show()